1 caf DEBUG actor0 140432092436224 caf.logger log_first_line logger.cpp:574 level = trace, node = invalid-node, component-blacklist = []
0 caf TRACE actor0 140432157042560 caf.group_manager init group_manager.cpp:465 ENTRY 
0 caf TRACE actor0 140432157042560 caf.$.local_group_module local_group_module group_manager.cpp:333 ENTRY 
0 caf TRACE actor0 140432157042560 caf.$.local_group_module operator() group_manager.cpp:333 EXIT
0 caf TRACE actor0 140432157042560 caf.group_manager operator() group_manager.cpp:465 EXIT
0 caf TRACE actor0 140432157042560 caf.detail.tick_emitter interval tick_emitter.cpp:50 ENTRY x = 5ms
0 caf TRACE actor0 140432157042560 caf.detail.tick_emitter operator() tick_emitter.cpp:50 EXIT
0 caf DEBUG actor0 140432157042560 caf.scheduled_actor scheduled_actor scheduled_actor.cpp:143 interval = 5ms max_batch_delay_ticks_ = 1 credit_round_ticks_ = 2
0 caf_flow DEBUG actor0 140432157042560 caf make_actor make_actor.hpp:43 SPAWN ; ID = 1 ; NAME = spawn_server ; TYPE = caf.stateful_actor ; ARGS = (actor_config(hidden_flag)) ; NODE = invalid-node ; GROUPS = []
0 caf TRACE actor1 140432157042560 caf.scheduled_actor launch scheduled_actor.cpp:204 ENTRY lazy = true hide = true
0 caf TRACE actor1 140432157042560 bool,%20bool)<GLOBAL operator() scheduled_actor.cpp:204 EXIT
0 caf TRACE actor0 140432157042560 caf.detail.tick_emitter interval tick_emitter.cpp:50 ENTRY x = 5ms
0 caf TRACE actor0 140432157042560 caf.detail.tick_emitter operator() tick_emitter.cpp:50 EXIT
0 caf DEBUG actor0 140432157042560 caf.scheduled_actor scheduled_actor scheduled_actor.cpp:143 interval = 5ms max_batch_delay_ticks_ = 1 credit_round_ticks_ = 2
0 caf_flow DEBUG actor0 140432157042560 caf make_actor make_actor.hpp:43 SPAWN ; ID = 2 ; NAME = config_server ; TYPE = caf.stateful_actor ; ARGS = (actor_config(hidden_flag)) ; NODE = invalid-node ; GROUPS = []
0 caf TRACE actor2 140432157042560 caf.scheduled_actor launch scheduled_actor.cpp:204 ENTRY lazy = true hide = true
0 caf TRACE actor2 140432157042560 bool,%20bool)<GLOBAL operator() scheduled_actor.cpp:204 EXIT
0 caf TRACE actor0 140432157042560 caf.scheduler.abstract_coordinator start abstract_coordinator.cpp:241 ENTRY 
0 caf_flow DEBUG actor0 140432157042560 caf make_actor make_actor.hpp:43 SPAWN ; ID = 3 ; NAME = printer_actor ; TYPE = caf.scheduler.ANON.printer_actor ; ARGS = (actor_config(detached_flag, hidden_flag)) ; NODE = invalid-node ; GROUPS = []
0 caf TRACE actor3 140432157042560 caf.blocking_actor launch blocking_actor.cpp:93 ENTRY hide = true
0 caf TRACE actor3 140432157042560 bool,%20bool)<GLOBAL operator() blocking_actor.cpp:93 EXIT
0 caf TRACE actor0 140432157042560 caf.scheduler.abstract_coordinator operator() abstract_coordinator.cpp:241 EXIT
0 caf TRACE actor0 140432157042560 caf.group_manager start group_manager.cpp:476 ENTRY 
0 caf TRACE actor0 140432157042560 caf.group_manager operator() group_manager.cpp:476 EXIT
0 caf TRACE actor3 140432100828928 caf.local_actor initialize local_actor.cpp:120 ENTRY id = 3 name = "printer_actor"
0 caf TRACE actor3 140432100828928 caf.local_actor operator() local_actor.cpp:120 EXIT
0 caf TRACE actor3 140432100828928 caf.blocking_actor receive_impl blocking_actor.cpp:234 ENTRY mid = message_id(1152921504606846976)
0 caf TRACE actor0 140432157042560 caf.detail.tick_emitter interval tick_emitter.cpp:50 ENTRY x = 5ms
0 caf TRACE actor0 140432157042560 caf.detail.tick_emitter operator() tick_emitter.cpp:50 EXIT
0 caf DEBUG actor0 140432157042560 caf.scheduled_actor scheduled_actor scheduled_actor.cpp:143 interval = 5ms max_batch_delay_ticks_ = 1 credit_round_ticks_ = 2
0 caf TRACE actor4 140432157042560 caf.scheduled_actor launch scheduled_actor.cpp:204 ENTRY lazy = false hide = false
0 caf DEBUG actor4 140432157042560 caf.actor_registry inc_running actor_registry.cpp:102 value = 1
0 caf TRACE actor4 140432157042560 bool,%20bool)<GLOBAL operator() scheduled_actor.cpp:204 EXIT
0 caf TRACE actor0 140432157042560 caf.detail.tick_emitter interval tick_emitter.cpp:50 ENTRY x = 5ms
0 caf TRACE actor0 140432157042560 caf.detail.tick_emitter operator() tick_emitter.cpp:50 EXIT
0 caf DEBUG actor0 140432157042560 caf.scheduled_actor scheduled_actor scheduled_actor.cpp:143 interval = 5ms max_batch_delay_ticks_ = 1 credit_round_ticks_ = 2
0 caf TRACE actor5 140432157042560 caf.scheduled_actor launch scheduled_actor.cpp:204 ENTRY lazy = false hide = false
0 caf DEBUG actor5 140432157042560 caf.actor_registry inc_running actor_registry.cpp:102 value = 2
0 caf TRACE actor5 140432157042560 bool,%20bool)<GLOBAL operator() scheduled_actor.cpp:204 EXIT
0 caf TRACE actor0 140432157042560 caf.actor_system ~actor_system actor_system.cpp:295 ENTRY 
0 caf DEBUG actor0 140432157042560 caf.actor_system ~actor_system actor_system.cpp:296 shutdown actor system
0 caf TRACE actor0 140432157042560 caf.actor_registry await_running_count_equal actor_registry.cpp:123 ENTRY expected = 0
0 caf DEBUG actor0 140432157042560 caf.actor_registry await_running_count_equal actor_registry.cpp:126 running_.load() = 2
1 caf TRACE actor5 140432126007040 caf.scheduled_actor resume scheduled_actor.cpp:381 ENTRY max_throughput = 18446744073709551615
1 caf TRACE actor4 140432008804096 caf.scheduled_actor resume scheduled_actor.cpp:381 ENTRY max_throughput = 18446744073709551615
1 caf TRACE actor4 140432008804096 caf.scheduled_actor activate scheduled_actor.cpp:744 ENTRY 
1 caf TRACE actor5 140432126007040 caf.scheduled_actor activate scheduled_actor.cpp:744 ENTRY 
1 caf TRACE actor4 140432008804096 caf.event_based_actor initialize event_based_actor.cpp:36 ENTRY subtype = "caf.event_based_actor"
1 caf TRACE actor5 140432126007040 caf.event_based_actor initialize event_based_actor.cpp:36 ENTRY subtype = "caf.event_based_actor"
1 caf TRACE actor5 140432126007040 caf.local_actor initialize local_actor.cpp:120 ENTRY id = 5 name = "scheduled_actor"
1 caf TRACE actor4 140432008804096 caf.local_actor initialize local_actor.cpp:120 ENTRY id = 4 name = "scheduled_actor"
1 caf TRACE actor5 140432126007040 caf.local_actor operator() local_actor.cpp:120 EXIT
1 caf TRACE actor4 140432008804096 caf.local_actor operator() local_actor.cpp:120 EXIT
1 caf TRACE actor5 140432126007040 caf.event_based_actor make_behavior event_based_actor.cpp:50 ENTRY 
1 caf TRACE actor4 140432008804096 caf.event_based_actor make_behavior event_based_actor.cpp:50 ENTRY 
1 caf TRACE actor4 140432008804096 caf.event_based_actor operator() event_based_actor.cpp:50 EXIT
1 caf DEBUG actor4 140432008804096 caf.event_based_actor initialize event_based_actor.cpp:44 make_behavior() did return a valid behavior
1 caf TRACE actor4 140432008804096 caf.scheduled_actor set_receive_timeout scheduled_actor.cpp:482 ENTRY 
1 caf TRACE actor4 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:482 EXIT
1 caf TRACE actor4 140432008804096 caf.event_based_actor operator() event_based_actor.cpp:36 EXIT
1 caf TRACE actor4 140432008804096 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
1 caf TRACE actor4 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
1 caf DEBUG actor4 140432008804096 caf.scheduled_actor activate scheduled_actor.cpp:761 initialized actor: name() = "scheduled_actor"
1 caf TRACE actor4 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:744 EXIT
1 caf DEBUG actor4 140432008804096 caf.scheduled_actor resume scheduled_actor.cpp:402 start new DRR round
1 caf TRACE actor4 140432008804096 size_t)<GLOBAL operator() scheduled_actor.cpp:381 EXIT
1 caf TRACE actor5 140432126007040 caf.scheduled_actor enqueue scheduled_actor.cpp:158 ENTRY *ptr = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe"))
1 caf_flow DEBUG actor5 140432126007040 caf.scheduled_actor enqueue scheduled_actor.cpp:159 SEND ; TO = 4@invalid-node ; FROM = 5@invalid-node ; STAGES = [] ; CONTENT = ("HiTheRe")
1 caf_flow DEBUG actor5 140432126007040 caf.scheduled_actor enqueue scheduled_actor.cpp:164 ACCEPT ; UNBLOCKED = true
1 caf TRACE actor5 140432126007040 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:158 EXIT
1 caf TRACE actor5 140432126007040 caf.local_actor request_response_timeout local_actor.cpp:63 ENTRY timeout = 9223372036854775807ns mid = message_id(1152921504606846977)
1 caf TRACE actor5 140432126007040 caf.message_id)<GLOBAL operator() local_actor.cpp:63 EXIT
1 caf TRACE actor5 140432126007040 caf.event_based_actor operator() event_based_actor.cpp:50 EXIT
1 caf DEBUG actor5 140432126007040 caf.event_based_actor initialize event_based_actor.cpp:41 make_behavior() did not return a behavior: alive = true
1 caf TRACE actor5 140432126007040 caf.event_based_actor operator() event_based_actor.cpp:36 EXIT
1 caf TRACE actor5 140432126007040 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
1 caf TRACE actor5 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
1 caf DEBUG actor5 140432126007040 caf.scheduled_actor activate scheduled_actor.cpp:761 initialized actor: name() = "scheduled_actor"
1 caf TRACE actor5 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:744 EXIT
1 caf DEBUG actor5 140432126007040 caf.scheduled_actor resume scheduled_actor.cpp:402 start new DRR round
1 caf TRACE actor5 140432126007040 size_t)<GLOBAL operator() scheduled_actor.cpp:381 EXIT
1 caf TRACE actor4 140432126007040 caf.scheduled_actor resume scheduled_actor.cpp:381 ENTRY max_throughput = 18446744073709551615
1 caf TRACE actor4 140432126007040 caf.scheduled_actor activate scheduled_actor.cpp:744 ENTRY 
1 caf TRACE actor4 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:744 EXIT
1 caf DEBUG actor4 140432126007040 caf.scheduled_actor resume scheduled_actor.cpp:402 start new DRR round
1 caf TRACE actor4 140432126007040 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:364 ENTRY x = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe")) handled_msgs = 0
1 caf TRACE actor4 140432126007040 caf.scheduled_actor reactivate scheduled_actor.cpp:787 ENTRY x = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe"))
1 caf TRACE actor4 140432126007040 caf.scheduled_actor consume scheduled_actor.cpp:626 ENTRY x = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe"))
1 caf_flow DEBUG actor4 140432126007040 caf.scheduled_actor consume scheduled_actor.cpp:628 RECEIVE ; FROM = 5@invalid-node ; STAGES = [] ; CONTENT = ("HiTheRe")
1 caf TRACE actor4 140432126007040 caf.scheduled_actor categorize scheduled_actor.cpp:551 ENTRY x = mailbox_element(5@invalid-node, message_id(1152921504606846977), <unprintable>, ("HiTheRe"))
1 caf TRACE actor4 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:551 EXIT
1 caf TRACE actor4 140432126007040 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = ("HITHERE")
1 caf DEBUG actor4 140432126007040 caf.detail.default_invoke_result_visitor<Self> deliver default_invoke_result_visitor.hpp:64 respond via response_promise
1 caf TRACE actor4 140432126007040 caf.response_promise deliver_impl response_promise.cpp:87 ENTRY msg = ("HITHERE")
1 caf TRACE actor4 140432126007040 caf.scheduled_actor enqueue scheduled_actor.cpp:158 ENTRY *ptr = mailbox_element(4@invalid-node, message_id(10376293541461622785), <unprintable>, ("HITHERE"))
1 caf_flow DEBUG actor4 140432126007040 caf.scheduled_actor enqueue scheduled_actor.cpp:159 SEND ; TO = 5@invalid-node ; FROM = 4@invalid-node ; STAGES = [] ; CONTENT = ("HITHERE")
1 caf_flow DEBUG actor4 140432126007040 caf.scheduled_actor enqueue scheduled_actor.cpp:164 ACCEPT ; UNBLOCKED = true
1 caf TRACE actor4 140432126007040 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:158 EXIT
1 caf TRACE actor4 140432126007040 caf.response_promise operator() response_promise.cpp:87 EXIT
1 caf TRACE actor4 140432126007040  operator() default_invoke_result_visitor.hpp:48 EXIT
1 caf_flow DEBUG actor4 140432126007040 caf.scheduled_actor consume scheduled_actor.cpp:729 FINALIZE
1 caf TRACE actor4 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:626 EXIT
1 caf TRACE actor4 140432126007040 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
1 caf TRACE actor4 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
1 caf TRACE actor4 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:787 EXIT
1 caf TRACE actor4 140432126007040 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:364 EXIT
1 caf TRACE actor4 140432126007040 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
1 caf TRACE actor4 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
1 caf TRACE actor4 140432126007040 caf.scheduled_actor advance_streams scheduled_actor.cpp:1153 ENTRY 
1 caf DEBUG actor4 140432126007040 caf.scheduled_actor advance_streams scheduled_actor.cpp:1155 tick emitter not started yet
1 caf TRACE actor4 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:1153 EXIT
1 caf DEBUG actor4 140432126007040 caf.scheduled_actor resume scheduled_actor.cpp:402 start new DRR round
1 caf TRACE actor4 140432126007040 caf.scheduled_actor set_receive_timeout scheduled_actor.cpp:482 ENTRY 
1 caf TRACE actor4 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:482 EXIT
1 caf TRACE actor4 140432126007040 size_t)<GLOBAL operator() scheduled_actor.cpp:381 EXIT
1 caf TRACE actor5 140432126007040 caf.scheduled_actor resume scheduled_actor.cpp:381 ENTRY max_throughput = 18446744073709551615
1 caf TRACE actor5 140432126007040 caf.scheduled_actor activate scheduled_actor.cpp:744 ENTRY 
1 caf TRACE actor5 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:744 EXIT
1 caf DEBUG actor5 140432126007040 caf.scheduled_actor resume scheduled_actor.cpp:402 start new DRR round
1 caf TRACE actor5 140432126007040 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:364 ENTRY x = mailbox_element(4@invalid-node, message_id(10376293541461622785), <unprintable>, ("HITHERE")) handled_msgs = 0
1 caf TRACE actor5 140432126007040 caf.scheduled_actor reactivate scheduled_actor.cpp:787 ENTRY x = mailbox_element(4@invalid-node, message_id(10376293541461622785), <unprintable>, ("HITHERE"))
1 caf TRACE actor5 140432126007040 caf.scheduled_actor consume scheduled_actor.cpp:626 ENTRY x = mailbox_element(4@invalid-node, message_id(10376293541461622785), <unprintable>, ("HITHERE"))
1 caf_flow DEBUG actor5 140432126007040 caf.scheduled_actor consume scheduled_actor.cpp:628 RECEIVE ; FROM = 4@invalid-node ; STAGES = [] ; CONTENT = ("HITHERE")
1 caf TRACE actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, "test_actor_buddy_function: Got \""))
1 caf_flow DEBUG actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, "test_actor_buddy_function: Got \"")
1 caf_flow DEBUG actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
1 caf TRACE actor5 140432126007040 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
1 caf TRACE actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, "HITHERE"))
1 caf_flow DEBUG actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, "HITHERE")
1 caf_flow DEBUG actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
1 caf TRACE actor5 140432126007040 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
1 caf TRACE actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, ".
))
1 caf_flow DEBUG actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, ".
)
1 caf_flow DEBUG actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
1 caf TRACE actor5 140432126007040 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
1 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, "test_actor_buddy_function: Got \""))
1 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, "test_actor_buddy_function: Got \"")
1 caf_flow DEBUG actor5 140432126007040 caf.scheduled_actor consume scheduled_actor.cpp:729 FINALIZE
1 caf TRACE actor5 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:626 EXIT
1 caf TRACE actor5 140432126007040 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
1 caf DEBUG actor5 140432126007040 caf.scheduled_actor finalize scheduled_actor.cpp:859 actor has no behavior and is ready for cleanup
1 caf TRACE actor5 140432126007040 caf.scheduled_actor cleanup scheduled_actor.cpp:225 ENTRY fail_state = none
1 caf TRACE actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
1 caf TRACE actor5 140432126007040 caf.local_actor cleanup local_actor.cpp:124 ENTRY fail_state = none
1 caf DEBUG actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:80 suppress response message: invalid response promise
1 caf TRACE actor3 140432100828928  operator() default_invoke_result_visitor.hpp:48 EXIT
1 caf DEBUG actor5 140432126007040 caf.actor_registry dec_running actor_registry.cpp:118 new_val = 1
1 caf_flow DEBUG actor5 140432126007040 caf.local_actor cleanup local_actor.cpp:127 TERMINATE ; ID = 5 ; REASON = none ; NODE = invalid-node
1 caf TRACE actor5 140432126007040 caf.monitorable_actor cleanup monitorable_actor.cpp:78 ENTRY reason = none
1 caf DEBUG actor0 140432157042560 caf.actor_registry await_running_count_equal actor_registry.cpp:126 running_.load() = 1
1 caf DEBUG actor5 140432126007040 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 5 node() = invalid-node fail_state_ = none
1 caf TRACE actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::delete_atom(), 5))
1 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:227 FINALIZE
1 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
1 caf_flow DEBUG actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::delete_atom(), 5)
1 caf_flow DEBUG actor5 140432126007040 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
1 caf TRACE actor5 140432126007040 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
1 caf TRACE actor5 140432126007040 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:78 EXIT
1 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, "HITHERE"))
1 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, "HITHERE")
1 caf TRACE actor5 140432126007040 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:124 EXIT
1 caf TRACE actor5 140432126007040 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:225 EXIT
1 caf TRACE actor5 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
1 caf DEBUG actor5 140432126007040 caf.scheduled_actor reactivate scheduled_actor.cpp:797 actor finalized
1 caf TRACE actor5 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:787 EXIT
1 caf TRACE actor5 140432126007040 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:364 EXIT
1 caf TRACE actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
1 caf DEBUG actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:80 suppress response message: invalid response promise
1 caf TRACE actor3 140432100828928  operator() default_invoke_result_visitor.hpp:48 EXIT
1 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:227 FINALIZE
1 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
1 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::add_atom(), 5, ".
))
1 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::add_atom(), 5, ".
)
1 caf TRACE actor4 140432126007040 caf.scheduled_actor cleanup scheduled_actor.cpp:225 ENTRY fail_state = exit_reason(unreachable)
1 caf TRACE actor4 140432126007040 caf.local_actor cleanup local_actor.cpp:124 ENTRY fail_state = exit_reason(unreachable)
1 caf TRACE actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
1 caf DEBUG actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:80 suppress response message: invalid response promise
1 caf TRACE actor0 140432157042560 <GLOBALGLOBAL operator() actor_registry.cpp:123 EXIT
1 caf TRACE actor0 140432157042560 caf anon_send_exit send.hpp:140 ENTRY dest = 1@invalid-node reason = user_shutdown
1 caf TRACE actor3 140432100828928  operator() default_invoke_result_visitor.hpp:48 EXIT
1 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:227 FINALIZE
1 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
1 caf TRACE actor0 140432157042560 caf.scheduled_actor enqueue scheduled_actor.cpp:158 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown))))
1 caf DEBUG actor4 140432126007040 caf.actor_registry dec_running actor_registry.cpp:118 new_val = 0
1 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::delete_atom(), 5))
1 caf_flow DEBUG actor4 140432126007040 caf.local_actor cleanup local_actor.cpp:127 TERMINATE ; ID = 4 ; REASON = exit_reason(unreachable) ; NODE = invalid-node
1 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::delete_atom(), 5)
1 caf TRACE actor4 140432126007040 caf.monitorable_actor cleanup monitorable_actor.cpp:78 ENTRY reason = exit_reason(unreachable)
1 caf_flow DEBUG actor0 140432157042560 caf.scheduled_actor enqueue scheduled_actor.cpp:159 SEND ; TO = 1@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(1@invalid-node, exit_reason(user_shutdown)))
1 caf_flow DEBUG actor0 140432157042560 caf.scheduled_actor enqueue scheduled_actor.cpp:164 ACCEPT ; UNBLOCKED = true
1 caf TRACE actor0 140432157042560 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:158 EXIT
1 caf DEBUG actor4 140432126007040 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 4 node() = invalid-node fail_state_ = exit_reason(unreachable)
1 caf TRACE actor0 140432157042560 Dest&,%20caf.exit_reason)<GLOBAL operator() send.hpp:140 EXIT
1 caf TRACE actor4 140432126007040 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:78 EXIT
1 caf TRACE actor0 140432157042560 caf anon_send_exit send.hpp:140 ENTRY dest = 2@invalid-node reason = user_shutdown
1 caf TRACE actor1 140432117614336 caf.scheduled_actor resume scheduled_actor.cpp:381 ENTRY max_throughput = 18446744073709551615
1 caf TRACE actor1 140432117614336 caf.scheduled_actor activate scheduled_actor.cpp:744 ENTRY 
1 caf TRACE actor4 140432126007040 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:124 EXIT
1 caf TRACE actor4 140432126007040 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:225 EXIT
1 caf TRACE actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
1 caf TRACE actor0 140432157042560 caf.scheduled_actor enqueue scheduled_actor.cpp:158 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown))))
1 caf TRACE actor1 140432117614336 caf.event_based_actor initialize event_based_actor.cpp:36 ENTRY subtype = "caf.stateful_actor"
2 caf TRACE actor1 140432117614336 caf.local_actor initialize local_actor.cpp:120 ENTRY id = 1 name = "spawn_server"
2 caf TRACE actor1 140432117614336 caf.local_actor operator() local_actor.cpp:120 EXIT
2 caf_flow DEBUG actor0 140432157042560 caf.scheduled_actor enqueue scheduled_actor.cpp:159 SEND ; TO = 2@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(2@invalid-node, exit_reason(user_shutdown)))
2 caf TRACE actor1 140432117614336 caf.event_based_actor make_behavior event_based_actor.cpp:50 ENTRY 
2 caf_flow DEBUG actor0 140432157042560 caf.scheduled_actor enqueue scheduled_actor.cpp:164 ACCEPT ; UNBLOCKED = true
2 caf TRACE actor0 140432157042560 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:158 EXIT
2 caf TRACE actor5 140432126007040 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
2 caf TRACE actor1 140432117614336 caf.$ spawn_serv_impl actor_system.cpp:156 ENTRY 
2 caf TRACE actor5 140432126007040 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
2 caf TRACE actor5 140432126007040 size_t)<GLOBAL operator() scheduled_actor.cpp:381 EXIT
2 caf DEBUG actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:80 suppress response message: invalid response promise
2 caf TRACE actor3 140432100828928  operator() default_invoke_result_visitor.hpp:48 EXIT
2 caf TRACE actor0 140432157042560 Dest&,%20caf.exit_reason)<GLOBAL operator() send.hpp:140 EXIT
2 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:227 FINALIZE
2 caf TRACE actor1 140432117614336 caf.$ operator() actor_system.cpp:156 EXIT
2 caf TRACE actor2 140432008804096 caf.scheduled_actor resume scheduled_actor.cpp:381 ENTRY max_throughput = 18446744073709551615
2 caf TRACE actor2 140432008804096 caf.scheduled_actor activate scheduled_actor.cpp:744 ENTRY 
2 caf TRACE actor0 140432157042560 caf.group_manager stop group_manager.cpp:480 ENTRY 
2 caf TRACE actor0 140432157042560 caf.$.local_group_module stop group_manager.cpp:415 ENTRY 
2 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
2 caf TRACE actor2 140432008804096 caf.event_based_actor initialize event_based_actor.cpp:36 ENTRY subtype = "caf.stateful_actor"
2 caf TRACE actor0 140432157042560 caf.$.local_group_module operator() group_manager.cpp:415 EXIT
2 caf TRACE actor1 140432117614336 caf.event_based_actor operator() event_based_actor.cpp:50 EXIT
2 caf TRACE actor2 140432008804096 caf.local_actor initialize local_actor.cpp:120 ENTRY id = 2 name = "config_server"
2 caf TRACE actor2 140432008804096 caf.local_actor operator() local_actor.cpp:120 EXIT
2 caf TRACE actor2 140432008804096 caf.event_based_actor make_behavior event_based_actor.cpp:50 ENTRY 
2 caf TRACE actor0 140432157042560 caf.group_manager operator() group_manager.cpp:480 EXIT
2 caf DEBUG actor1 140432117614336 caf.event_based_actor initialize event_based_actor.cpp:44 make_behavior() did return a valid behavior
2 caf TRACE actor2 140432008804096 caf.$ config_serv_impl actor_system.cpp:54 ENTRY 
2 caf TRACE actor1 140432117614336 caf.scheduled_actor set_receive_timeout scheduled_actor.cpp:482 ENTRY 
2 caf DEBUG actor0 140432157042560 caf.actor_system ~actor_system actor_system.cpp:314 stop module Scheduler
2 caf TRACE actor2 140432008804096 caf.$ operator() actor_system.cpp:54 EXIT
2 caf TRACE actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:482 EXIT
2 caf TRACE actor2 140432008804096 caf.event_based_actor operator() event_based_actor.cpp:50 EXIT
2 caf TRACE actor1 140432117614336 caf.event_based_actor operator() event_based_actor.cpp:36 EXIT
2 caf DEBUG actor2 140432008804096 caf.event_based_actor initialize event_based_actor.cpp:44 make_behavior() did return a valid behavior
2 caf TRACE actor1 140432117614336 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
2 caf TRACE actor2 140432008804096 caf.scheduled_actor set_receive_timeout scheduled_actor.cpp:482 ENTRY 
2 caf TRACE actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:482 EXIT
2 caf TRACE actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
2 caf TRACE actor2 140432008804096 caf.event_based_actor operator() event_based_actor.cpp:36 EXIT
2 caf DEBUG actor1 140432117614336 caf.scheduled_actor activate scheduled_actor.cpp:761 initialized actor: name() = "spawn_server"
3 caf TRACE actor2 140432008804096 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
3 caf TRACE actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:744 EXIT
3 caf TRACE actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
3 caf DEBUG actor1 140432117614336 caf.scheduled_actor resume scheduled_actor.cpp:402 start new DRR round
3 caf DEBUG actor2 140432008804096 caf.scheduled_actor activate scheduled_actor.cpp:761 initialized actor: name() = "config_server"
3 caf TRACE actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:744 EXIT
3 caf TRACE actor1 140432117614336 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:364 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown)))) handled_msgs = 0
3 caf DEBUG actor2 140432008804096 caf.scheduled_actor resume scheduled_actor.cpp:402 start new DRR round
3 caf TRACE actor1 140432117614336 caf.scheduled_actor reactivate scheduled_actor.cpp:787 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown))))
3 caf TRACE actor2 140432008804096 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:364 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown)))) handled_msgs = 0
3 caf TRACE actor1 140432117614336 caf.scheduled_actor consume scheduled_actor.cpp:626 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown))))
3 caf TRACE actor2 140432008804096 caf.scheduled_actor reactivate scheduled_actor.cpp:787 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown))))
3 caf_flow DEBUG actor1 140432117614336 caf.scheduled_actor consume scheduled_actor.cpp:628 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(1@invalid-node, exit_reason(user_shutdown)))
3 caf TRACE actor2 140432008804096 caf.scheduled_actor consume scheduled_actor.cpp:626 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown))))
3 caf TRACE actor1 140432117614336 caf.scheduled_actor categorize scheduled_actor.cpp:551 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(1@invalid-node, exit_reason(user_shutdown))))
3 caf TRACE actor1 140432117614336 caf.monitorable_actor unlink_from monitorable_actor.cpp:65 ENTRY x = 1@invalid-node
3 caf_flow DEBUG actor2 140432008804096 caf.scheduled_actor consume scheduled_actor.cpp:628 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(2@invalid-node, exit_reason(user_shutdown)))
3 caf TRACE actor1 140432117614336 caf.actor_addr&)<GLOBAL operator() monitorable_actor.cpp:65 EXIT
3 caf TRACE actor2 140432008804096 caf.scheduled_actor categorize scheduled_actor.cpp:551 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(2@invalid-node, exit_reason(user_shutdown))))
3 caf TRACE actor1 140432117614336 caf.scheduled_actor quit scheduled_actor.cpp:436 ENTRY x = exit_reason(user_shutdown)
3 caf TRACE actor2 140432008804096 caf.monitorable_actor unlink_from monitorable_actor.cpp:65 ENTRY x = 2@invalid-node
3 caf TRACE actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:436 EXIT
3 caf TRACE actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:551 EXIT
3 caf TRACE actor2 140432008804096 caf.actor_addr&)<GLOBAL operator() monitorable_actor.cpp:65 EXIT
3 caf DEBUG actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:678 handled system message
3 caf_flow DEBUG actor1 140432117614336 caf.scheduled_actor consume scheduled_actor.cpp:729 FINALIZE
3 caf TRACE actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:626 EXIT
3 caf TRACE actor2 140432008804096 caf.scheduled_actor quit scheduled_actor.cpp:436 ENTRY x = exit_reason(user_shutdown)
3 caf TRACE actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:436 EXIT
3 caf TRACE actor1 140432117614336 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
3 caf DEBUG actor1 140432117614336 caf.scheduled_actor finalize scheduled_actor.cpp:859 actor has no behavior and is ready for cleanup
3 caf TRACE actor1 140432117614336 caf.stateful_actor<<template-parameter-1-1>%20.,%20<template-parameter-1-2>> on_exit stateful_actor.hpp:53 ENTRY 
3 caf TRACE actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:551 EXIT
3 caf DEBUG actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:678 handled system message
3 caf TRACE actor1 140432117614336 [with%20State%20=%20caf.$ operator() stateful_actor.hpp:53 EXIT
3 caf_flow DEBUG actor2 140432008804096 caf.scheduled_actor consume scheduled_actor.cpp:729 FINALIZE
3 caf TRACE actor1 140432117614336 caf.scheduled_actor cleanup scheduled_actor.cpp:225 ENTRY fail_state = exit_reason(user_shutdown)
3 caf TRACE actor1 140432117614336 caf.local_actor cleanup local_actor.cpp:124 ENTRY fail_state = exit_reason(user_shutdown)
3 caf TRACE actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:626 EXIT
3 caf_flow DEBUG actor1 140432117614336 caf.local_actor cleanup local_actor.cpp:127 TERMINATE ; ID = 1 ; REASON = exit_reason(user_shutdown) ; NODE = invalid-node
3 caf TRACE actor2 140432008804096 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
3 caf DEBUG actor2 140432008804096 caf.scheduled_actor finalize scheduled_actor.cpp:859 actor has no behavior and is ready for cleanup
3 caf TRACE actor1 140432117614336 caf.monitorable_actor cleanup monitorable_actor.cpp:78 ENTRY reason = exit_reason(user_shutdown)
3 caf TRACE actor2 140432008804096 caf.stateful_actor<<template-parameter-1-1>%20.,%20<template-parameter-1-2>> on_exit stateful_actor.hpp:53 ENTRY 
3 caf TRACE actor2 140432008804096 [with%20State%20=%20caf.$ operator() stateful_actor.hpp:53 EXIT
3 caf DEBUG actor1 140432117614336 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 1 node() = invalid-node fail_state_ = exit_reason(user_shutdown)
3 caf TRACE actor2 140432008804096 caf.scheduled_actor cleanup scheduled_actor.cpp:225 ENTRY fail_state = exit_reason(user_shutdown)
3 caf TRACE actor1 140432117614336 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:78 EXIT
3 caf TRACE actor2 140432008804096 caf.local_actor cleanup local_actor.cpp:124 ENTRY fail_state = exit_reason(user_shutdown)
3 caf TRACE actor1 140432117614336 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:124 EXIT
3 caf_flow DEBUG actor2 140432008804096 caf.local_actor cleanup local_actor.cpp:127 TERMINATE ; ID = 2 ; REASON = exit_reason(user_shutdown) ; NODE = invalid-node
3 caf TRACE actor1 140432117614336 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:225 EXIT
3 caf TRACE actor2 140432008804096 caf.monitorable_actor cleanup monitorable_actor.cpp:78 ENTRY reason = exit_reason(user_shutdown)
3 caf DEBUG actor2 140432008804096 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 2 node() = invalid-node fail_state_ = exit_reason(user_shutdown)
3 caf TRACE actor2 140432008804096 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:78 EXIT
3 caf TRACE actor2 140432008804096 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:124 EXIT
3 caf TRACE actor2 140432008804096 caf.execution_unit*)<GLOBAL operator() scheduled_actor.cpp:225 EXIT
3 caf TRACE actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
3 caf TRACE actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
3 caf DEBUG actor1 140432117614336 caf.scheduled_actor reactivate scheduled_actor.cpp:797 actor finalized
3 caf DEBUG actor2 140432008804096 caf.scheduled_actor reactivate scheduled_actor.cpp:797 actor finalized
3 caf TRACE actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:787 EXIT
3 caf TRACE actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:787 EXIT
3 caf TRACE actor1 140432117614336 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:364 EXIT
3 caf TRACE actor2 140432008804096 caf.scheduled_actor.mailbox_visitor operator() scheduled_actor.cpp:364 EXIT
3 caf TRACE actor2 140432008804096 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
3 caf TRACE actor2 140432008804096 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
3 caf TRACE actor1 140432117614336 caf.scheduled_actor finalize scheduled_actor.cpp:836 ENTRY 
3 caf TRACE actor2 140432008804096 size_t)<GLOBAL operator() scheduled_actor.cpp:381 EXIT
3 caf TRACE actor1 140432117614336 caf.scheduled_actor operator() scheduled_actor.cpp:836 EXIT
3 caf TRACE actor1 140432117614336 size_t)<GLOBAL operator() scheduled_actor.cpp:381 EXIT
4 caf TRACE actor0 140432157042560 caf.scheduler.abstract_coordinator stop_actors abstract_coordinator.cpp:262 ENTRY 
4 caf_flow DEBUG actor0 140432157042560 caf make_actor make_actor.hpp:43 SPAWN ; ID = 6 ; NAME = scoped_actor ; TYPE = caf.ANON.impl ; ARGS = (actor_config(detached_flag, hidden_flag)) ; NODE = invalid-node ; GROUPS = []
4 caf TRACE actor6 140432157042560 caf.$.impl launch scoped_actor.cpp:46 ENTRY hide = false
4 caf DEBUG actor6 140432157042560 caf.actor_registry inc_running actor_registry.cpp:102 value = 1
4 caf TRACE actor6 140432157042560 caf.local_actor initialize local_actor.cpp:120 ENTRY id = 6 name = "scoped_actor"
4 caf TRACE actor6 140432157042560 caf.local_actor operator() local_actor.cpp:120 EXIT
4 caf TRACE actor6 140432157042560 bool,%20bool)<GLOBAL operator() scoped_actor.cpp:46 EXIT
4 caf TRACE actor6 140432157042560 caf anon_send_exit send.hpp:140 ENTRY dest = 3@invalid-node reason = user_shutdown
4 caf TRACE actor6 140432157042560 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(3@invalid-node, exit_reason(user_shutdown))))
4 caf_flow DEBUG actor6 140432157042560 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 3@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(3@invalid-node, exit_reason(user_shutdown)))
4 caf_flow DEBUG actor6 140432157042560 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
4 caf TRACE actor6 140432157042560 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
4 caf TRACE actor6 140432157042560 Dest&,%20caf.exit_reason)<GLOBAL operator() send.hpp:140 EXIT
4 caf TRACE actor6 140432157042560 caf.monitorable_actor attach monitorable_actor.cpp:40 ENTRY 
4 caf TRACE actor6 140432157042560 caf.monitorable_actor operator() monitorable_actor.cpp:40 EXIT
4 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (exit_msg(3@invalid-node, exit_reason(user_shutdown))))
4 caf TRACE actor6 140432157042560 caf.blocking_actor receive_impl blocking_actor.cpp:234 ENTRY mid = message_id(1152921504606846976)
4 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (exit_msg(3@invalid-node, exit_reason(user_shutdown)))
4 caf TRACE actor3 140432100828928 caf.monitorable_actor unlink_from monitorable_actor.cpp:65 ENTRY x = 3@invalid-node
4 caf TRACE actor3 140432100828928 caf.actor_addr&)<GLOBAL operator() monitorable_actor.cpp:65 EXIT
4 caf TRACE actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
4 caf DEBUG actor3 140432100828928 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:80 suppress response message: invalid response promise
4 caf TRACE actor3 140432100828928  operator() default_invoke_result_visitor.hpp:48 EXIT
4 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:227 FINALIZE
4 caf TRACE actor3 140432100828928 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
4 caf TRACE actor3 140432100828928 caf.message_id,%20caf.detail.blocking_behavior&)<GLOBAL operator() blocking_actor.cpp:234 EXIT
4 caf TRACE actor3 140432100828928 caf.local_actor cleanup local_actor.cpp:124 ENTRY fail_state = exit_reason(user_shutdown)
4 caf_flow DEBUG actor3 140432100828928 caf.local_actor cleanup local_actor.cpp:127 TERMINATE ; ID = 3 ; REASON = exit_reason(user_shutdown) ; NODE = invalid-node
4 caf TRACE actor3 140432100828928 caf.monitorable_actor cleanup monitorable_actor.cpp:78 ENTRY reason = exit_reason(user_shutdown)
4 caf DEBUG actor3 140432100828928 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 3 node() = invalid-node fail_state_ = exit_reason(user_shutdown)
4 caf TRACE actor3 140432100828928 caf.blocking_actor enqueue blocking_actor.cpp:67 ENTRY *ptr = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::wait_for_atom()))
4 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor enqueue blocking_actor.cpp:68 SEND ; TO = 6@invalid-node ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::wait_for_atom())
4 caf TRACE actor6 140432157042560 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 ENTRY x = mailbox_element(null:pointer, message_id(1152921504606846976), <unprintable>, (caf::wait_for_atom()))
4 caf_flow DEBUG actor6 140432157042560 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:163 RECEIVE ; FROM = null:pointer ; STAGES = [] ; CONTENT = (caf::wait_for_atom())
4 caf_flow DEBUG actor3 140432100828928 caf.blocking_actor enqueue blocking_actor.cpp:79 ACCEPT ; UNBLOCKED = false
4 caf TRACE actor6 140432157042560 caf.detail.default_invoke_result_visitor<Self> operator() default_invoke_result_visitor.hpp:48 ENTRY x = <empty-message>
4 caf TRACE actor3 140432100828928 caf.execution_unit*)<GLOBAL operator() blocking_actor.cpp:67 EXIT
4 caf DEBUG actor6 140432157042560 caf.detail.default_invoke_result_visitor<Self> delegate default_invoke_result_visitor.hpp:80 suppress response message: invalid response promise
4 caf TRACE actor3 140432100828928 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:78 EXIT
4 caf TRACE actor3 140432100828928 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:124 EXIT
4 caf TRACE actor6 140432157042560  operator() default_invoke_result_visitor.hpp:48 EXIT
4 caf_flow DEBUG actor6 140432157042560 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:227 FINALIZE
4 caf TRACE actor6 140432157042560 caf.blocking_actor.mailbox_visitor operator() blocking_actor.cpp:162 EXIT
4 caf TRACE actor6 140432157042560 caf.message_id,%20caf.detail.blocking_behavior&)<GLOBAL operator() blocking_actor.cpp:234 EXIT
4 caf TRACE actor6 140432157042560 caf.local_actor cleanup local_actor.cpp:124 ENTRY fail_state = none
4 caf DEBUG actor6 140432157042560 caf.actor_registry dec_running actor_registry.cpp:118 new_val = 0
4 caf_flow DEBUG actor6 140432157042560 caf.local_actor cleanup local_actor.cpp:127 TERMINATE ; ID = 6 ; REASON = none ; NODE = invalid-node
4 caf TRACE actor6 140432157042560 caf.monitorable_actor cleanup monitorable_actor.cpp:78 ENTRY reason = none
4 caf DEBUG actor6 140432157042560 caf.monitorable_actor cleanup monitorable_actor.cpp:95 cleanup id() = 6 node() = invalid-node fail_state_ = none
4 caf TRACE actor6 140432157042560 caf.execution_unit*)<GLOBAL operator() monitorable_actor.cpp:78 EXIT
4 caf TRACE actor6 140432157042560 caf.execution_unit*)<GLOBAL operator() local_actor.cpp:124 EXIT
4 caf TRACE actor0 140432157042560 caf.scheduler.abstract_coordinator operator() abstract_coordinator.cpp:262 EXIT
4 caf TRACE actor0 140432157042560 caf.actor_system operator() actor_system.cpp:295 EXIT
5 caf DEBUG actor0 140432092436224 caf.logger log_last_line logger.cpp:594 
